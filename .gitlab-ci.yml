---

default:
  before_script:
  image: docker:24.0.7

include:
  - template: Code-Quality.gitlab-ci.yml
  - template: Security/License-Scanning.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml

stages:
  - qa
  - security

variables:
  # Use now deprecadet License-Scanning
  LICENSE_MANAGEMENT_VERSION: 4

secret_detection:
  stage: security
  interruptible: true
  needs: []

code_quality:
  stage: qa
  interruptible: true

license_scanning:
  stage: qa
  interruptible: true
  needs: []
  before_script:
    - |
      set -x
      apt update
      apt install -y --no-install-recommends python3 python3-venv
      curl -sSL https://install.python-poetry.org/ | python3 -
      /root/.local/bin/poetry export --format requirements.txt > ../requirements.txt
  variables:
    LM_PYTHON_VERSION: 3
    LICENSE_FINDER_CLI_OPTS: "--recursive"

lint:shellcheck:
  stage: qa
  interruptible: true
  needs: []
  image:
    name: koalaman/shellcheck-alpine
    entrypoint: [""]
  script:
    - shellcheck --format tty $(find -name '*.sh' -type f)
  allow_failure: true

lint:djlint:
  stage: qa
  interruptible: true
  needs: []
  image:
    name: python:3.12-slim
    entrypoint: [""]
  before_script:
    - pip3 install poetry
    - poetry install || true
  script:
    - poetry run djlint --lint --profile=django .
  allow_failure: true

format:black:
  stage: qa
  interruptible: true
  needs: []
  image:
    name: python:3.12-slim
    entrypoint: [""]
  before_script:
    - pip3 install poetry
    - poetry install || true
  script:
    - poetry run black --check .
    - poetry run isort --check-only .
  allow_failure: true

format:djlint:
  stage: qa
  interruptible: true
  needs: []
  image:
    name: python:3.12-slim
    entrypoint: [""]
  before_script:
    - pip3 install poetry
    - poetry install || true
  script:
    - poetry run djlint --check .
  allow_failure: true
